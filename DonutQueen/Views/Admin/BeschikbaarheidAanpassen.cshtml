@model DonutQueen.ViewModels.BeschikbaarheidAanpassenViewModel

@{
    ViewData["Title"] = "Beschikbaarheid aanpassen";
}


<h1 class="mt-5">@ViewData["Title"] @Model.Winkelnaam</h1>

<form action="BeschikbaarheidAanpassen" method="post">
    <div class="row mt-5">
        <input hidden value="@Model.WinkelId" asp-for="WinkelId" />
        <div asp-validation-summary="ModelOnly" class="text-danger" />
        <div class="col-md-4">
            <div class="form-group">
               
                <select asp-for="@Model.DonutId" asp-items="Model.Donuts" onchange="document.getElementById('update').click();" >
                    <option value="Selecteer">Selecteer een donut</option>
                </select>
                <span asp-validation-for="DonutId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Hoeveelheid" class="control-label">@Html.DisplayNameFor(model => this.Model.Hoeveelheid)</label>
                <input asp-for="Hoeveelheid" class="form-control" value="@Model.Hoeveelheid"/>
                <span asp-validation-for="Hoeveelheid" class="text-danger"></span>
            </div>
                    <div class="form-group">
                <input id="update" type="submit" asp-action="BeschikbaarheidAanpassen" hidden value="submit" formmethod="get"/>
                <input id="aanmaken" type="submit" value="Aanpassen" class="btn" style="background-color: hotpink !important; color: white !important;" />
                <a asp-action="Donuts" class="btn" style="background-color: hotpink !important; color: white !important;">Terug</a>
            </div>
        </div>
    </div>
</form>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }


